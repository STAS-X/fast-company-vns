{"version":3,"sources":["reportWebVitals.js","app/utils/ validator.js","app/utils/transformColor.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radio.Field.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/utils/animateTostify.js","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/qaulity.service.js","app/utils/isOutdated.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/generateAuthError.js","app/utils/history.js","app/store/users.js","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/components/ui/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","transformBootColor","color","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","EMOJIS","colourStyles","control","styles","backgroundColor","isDisabled","isFocused","isSelected","chroma","undefined","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","bgColor","isMulti","closeMenuOnSelect","closeMenuOnScroll","menuShouldScrollIntoView","classNamePrefix","components","MultiValueContainer","children","props","arrayChildren","Children","toArray","newChlidren","child","index","findIndex","Option","BackHistoryButton","history","useHistory","goBack","bounce","cssTransition","enter","exit","initOpts","position","toast","POSITION","TOP_CENTER","icon","hideProgressBar","draggable","pauseOnFocusLoss","pauseOnHover","autoClose","toastErrorBounce","text","TOP_RIGHT","transition","toastDarkBounce","dark","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","configFile","isMongoBase","apiDataEndpoint","apiEndpoint","authService","register","payload","a","post","login","refresh","grant_type","refresh_token","http","interceptors","request","use","expireSession","Math","floor","abs","now","headers","Authorization","Session_Expire","console","log","Promise","reject","response","res","content","key","status","httpService","get","put","delete","patch","qualityService","fetchAll","isOutdated","date","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualitiesRequested","state","qualitiesReceved","action","qualitiesRequestFiled","qualitiesReducer","reducer","actions","loadQualitiesList","dispatch","getState","qualities","professionService","req","professionsSlice","professionsRequested","professionsReceved","professionsRequestFiled","professionsReducer","userEndpoint","userService","item","rate","toFixed","getCurrentUser","update","generetaAuthError","createBrowserHistory","auth","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceved","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","userUpdateSuccessed","u","userUpdateData","updateUser","find","rateDirection","Number","toString","bookmark","authRequested","usersReducer","createAction","userUpdateFailed","userUpdateRequested","logOut","location","pathname","loadUsersList","user","redirect","updateUserData","users","getUserById","EditUserPage","setIsLoading","setData","currentUser","useSelector","useDispatch","qualitiesLoading","qualitiesList","q","professions","professionLoading","professionsList","p","setErrors","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfog","email","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","UserCard","setDirectionRate","updateCaretUpClass","useMemo","updateCaretDownClass","src","image","width","role","Quality","Qualities","QualitiesCard","MeetingsCard","displayDate","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","Comment","created","created_at","onRemove","currentUserId","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","params","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceved","commentsRequestFiled","commetnCreated","commentRemoved","filter","c","commentsReducer","addCommentRequested","removeCommentRequested","Comments","useParams","loadCommentsList","sortedComments","UserPage","completedMeetings","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","SearchStatus","number","lastOne","slice","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","scope","Table","Profession","prof","getProfessionbyId","UserTable","onToggleBookMark","to","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","onDelete","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","CheckBoxField","LoginForm","password","stayOn","loginError","dispath","from","code","errorMessage","RegisterForm","licence","min","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setError","setStatus","progress","setProgress","setCount","summuryCount","incrementCount","updateProgress","newProgress","success","theme","initialize","Main","NavProfile","isOpen","setOpen","NavBar","aria-current","ProtectedRoute","Component","render","LogOut","AppLoader","usersStatusLoading","authError","App","exact","require","combineReducers","configureStore","rootReducer","store","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d084af6.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","export function transformBootColor(color) {\r\n    switch (color) {\r\n        case \"primary\":\r\n            color = \"#0d6efd\";\r\n            break;\r\n        case \"secondary\":\r\n            color = \"#6c757d\";\r\n            break;\r\n        case \"success\":\r\n            color = \"#198754\";\r\n            break;\r\n        case \"info\":\r\n            color = \"#0dcaf0\";\r\n            break;\r\n        case \"warning\":\r\n            color = \"#ffc107\";\r\n            break;\r\n        case \"danger\":\r\n            color = \"#dc3545\";\r\n            break;\r\n        case \"light\":\r\n            color = \"#f8f9fa\";\r\n            break;\r\n        case \"dark\":\r\n            color = \"#212529\";\r\n            break;\r\n    }\r\n\r\n    return color;\r\n}\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  name: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id=\"validationCustom04\"\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React, { Children } from \"react\";\nimport chroma from \"chroma-js\";\nimport Select, { components } from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const EMOJIS = [\"👍\", \"🤙\", \"👏\", \"👌\", \"🙌\", \"✌️\", \"🖖\", \"👐\"];\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  label: options[optionName].name,\n                  value: options[optionName]._id,\n                  color: options[optionName].color\n              }))\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    const colourStyles = {\n        control: (styles) => ({ ...styles, backgroundColor: \"white\" }),\n        option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n            const color = chroma(data.color);\n            return {\n                ...styles,\n                backgroundColor: isDisabled\n                    ? undefined\n                    : isSelected\n                    ? data.color\n                    : isFocused\n                    ? color.alpha(0.2).css()\n                    : undefined,\n                color: isDisabled\n                    ? \"#ccc\"\n                    : isSelected\n                    ? chroma.contrast(color, \"white\") > 2\n                        ? \"white\"\n                        : \"black\"\n                    : data.color,\n                cursor: isDisabled ? \"not-allowed\" : \"pointer\",\n\n                \":active\": {\n                    ...styles[\":active\"],\n                    backgroundColor: !isDisabled\n                        ? isSelected\n                            ? color\n                            : color.alpha(0.3).css()\n                        : undefined\n                }\n            };\n        },\n        multiValue: (styles, { data }) => {\n            const color = chroma(data.color);\n            return {\n                ...styles,\n                backgroundColor: color.alpha(0.3).css()\n            };\n        },\n        multiValueLabel: (styles, { data }) => {\n            const color = chroma(data.color);\n            return {\n                ...styles,\n                color: color\n            };\n        },\n        multiValueRemove: (styles, { data }) => {\n            const bgColor = chroma(data.color);\n            const color = chroma(\"#6610f2\");\n            return {\n                ...styles,\n                color: bgColor,\n                \":hover\": {\n                    backgroundColor: bgColor.alpha(0.5).css(),\n                    color: color.alpha(0.8).css()\n                }\n            };\n        }\n    };\n\n    const MultiValueContainer = ({ children, ...props }) => {\n        const arrayChildren = Children.toArray(children);\n        const newChlidren = Children.map(arrayChildren, (child, index) => {\n            return arrayChildren[arrayChildren.length - index - 1];\n        });\n        return (\n            <components.MultiValueContainer {...props}>\n                {newChlidren}\n                {`${\n                    EMOJIS[\n                        optionsArray.findIndex(\n                            (option) => option.value === props.data.value\n                        )\n                    ]\n                }`}\n            </components.MultiValueContainer>\n        );\n    };\n    MultiValueContainer.propTypes = {\n        children: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.node),\n            PropTypes.node\n        ]),\n        data: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n    };\n\n    const Option = ({ children, ...props }) => {\n        return <components.Option {...props}> ➕ {children}</components.Option>;\n    };\n\n    Option.propTypes = {\n        children: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.node),\n            PropTypes.node\n        ]),\n        data: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                closeMenuOnScroll={false}\n                menuShouldScrollIntoView={true}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                styles={colourStyles}\n                components={{\n                    MultiValueContainer,\n                    Option\n                }}\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","import \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, cssTransition } from \"react-toastify\";\r\n\r\nconst bounce = cssTransition({\r\n    enter: \"animate__animated animate__bounceIn\",\r\n    exit: \"animate__animated animate__bounceOut\"\r\n});\r\n\r\n// https://animista.net/\r\n// source animation inside style.css\r\nconst wobble = cssTransition({\r\n    enter: \"wobble-hor-bottom\",\r\n    exit: \"wobble-hor-top\"\r\n});\r\n\r\nconst initOpts = {\r\n    position: toast.POSITION.TOP_CENTER,\r\n    icon: true,\r\n    hideProgressBar: true,\r\n    draggable: true,\r\n    pauseOnFocusLoss: false,\r\n    pauseOnHover: false,\r\n    autoClose: 2500\r\n};\r\n\r\nexport function toastSuccessBounce(text) {\r\n    toast.success(\"👌 \" + text, {\r\n        ...initOpts,\r\n        theme: \"colored\",\r\n        transition: bounce\r\n    });\r\n}\r\n\r\nexport function toastErrorBounce(text) {\r\n    toast.error(\"👋 \" + text, {\r\n        ...initOpts,\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        transition: bounce\r\n    });\r\n}\r\n\r\nexport function toastDarkBounce(text) {\r\n    toast.dark(\"👋 \" + text, {\r\n        ...initOpts,\r\n        transition: bounce\r\n    });\r\n}\r\n\r\nexport function toastSuccessSwirl(text) {\r\n    toast.success(\"👌 \" + text, {\r\n        ...initOpts,\r\n        theme: \"colored\",\r\n        transition: wobble\r\n    });\r\n}\r\n\r\nexport function toastWarningSwirl(text) {\r\n    toast.warning(\"👋 \" + text, {\r\n        ...initOpts,\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        transition: wobble\r\n    });\r\n}\r\n\r\nexport function toastDarkSwirl(text) {\r\n    toast.dark(\"👋 \" + text, {\r\n        ...initOpts,\r\n        transition: wobble\r\n    });\r\n}\r\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({ refreshToken, accessToken, userId, expiresIn = 3600 }) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, userId);\r\n    localStorage.setItem(TOKEN_KEY, accessToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\nexport default localStorageService;\r\n","// import axios from \"axios\";\r\n// import configFile from \"../config.json\";\r\n// import httpService from \"./http.service\";\r\nimport configFile from \"../config.json\";\r\nimport axios from \"axios\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst httpAuth = axios.create({\r\n    baseURL: `${(configFile.isMongoBase\r\n        ? configFile.apiDataEndpoint\r\n        : configFile.apiEndpoint)}auth/`\r\n});\r\n\r\nconst authService = {\r\n    register: async (payload) => {\r\n        const { data } = await httpAuth.post(`signUp/`, payload);\r\n        return data;\r\n    },\r\n    login: async (payload) => {\r\n        const { data } = await httpAuth.post(`signInWithPassword/`, payload);\r\n        return data;\r\n    },\r\n    refresh: async () => {\r\n        const { data } = await httpAuth.post(\"token/\", {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorageService.getRefreshToken()\r\n        });\r\n        return data;\r\n    }\r\n};\r\nexport default authService;\r\n","import axios from \"axios\";\r\nimport { toastDarkBounce } from \"../utils/animateTostify\";\r\nimport configFile from \"../config.json\";\r\nimport authService from \"./auth.service\";\r\n\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.isMongoBase\r\n        ? configFile.apiDataEndpoint\r\n        : configFile.apiEndpoint\r\n});\r\n// const dispatch = useDispatch();\r\n\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n        if (configFile.isMongoBase) {\r\n            // const containSlash = /\\/$/gi.test(config.url);\r\n            // config.url =\r\n            //     (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n            const expiresDate = localStorageService.getTokenExpiresDate();\r\n            const refreshToken = localStorageService.getRefreshToken();\r\n            const expireSession = Math.floor(\r\n                (Math.abs(Date.now() - expiresDate) / (1000 * 3600)) % 24\r\n            );\r\n            if (refreshToken && expiresDate < Date.now()) {\r\n                const data = await authService.refresh();\r\n                localStorageService.setTokens(data);\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                if (expireSession < 3) {\r\n                    config.headers = {\r\n                        ...config.headers,\r\n                        Authorization: `Bearer ${accessToken}`\r\n                    };\r\n                } else {\r\n                    config.headers = {\r\n                        ...config.headers,\r\n                        Authorization: \"\",\r\n                        Session_Expire: true\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        console.log(\"Обнаружена ошибка при работе запроса\");\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nfunction transormData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isMongoBase) {\r\n            res.data = { content: transormData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n\r\n        if (!expectedErrors && error.response.data.type !== \"expires\") {\r\n            toastDarkBounce(\r\n                `При запросе данных произошла ошибка: ${error.response?.data?.message || error.message || error}`\r\n            );\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete,\r\n    patch: http.patch\r\n};\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","function isOutdated(date) {\n    if (Date.now() - date > 10 * 60 * 100) {\n        return true;\n    }\n    return false;\n}\nexport default isOutdated;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/qaulity.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\nconst qualitiesSlice = createSlice({\n    name: \"qualities\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        qualitiesRequested: (state) => {\n            state.isLoading = true;\n        },\n        qualitiesReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        qualitiesRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: qualitiesReducer, actions } = qualitiesSlice;\nconst { qualitiesRequested, qualitiesReceved, qualitiesRequestFiled } = actions;\n\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().qualities;\n    if (isOutdated(lastFetch)) {\n        dispatch(qualitiesRequested());\n        try {\n            const { content } = await qualityService.fetchAll();\n            dispatch(qualitiesReceved(content));\n        } catch (error) {\n            dispatch(qualitiesRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\nexport const getQualitiesLoadingStatus = () => (state) =>\n    state.qualities.isLoading;\nexport const getQulitiesByIds = (qualitiesIds) => (state) => {\n    if (state.qualities.entities) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of state.qualities.entities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n        return qualitiesArray;\n    }\n    return [];\n};\n\nexport default qualitiesReducer;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const req = await httpService.get(professionEndpoint);\n        return req.data;\n    }\n};\nexport default professionService;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport professionService from \"../services/profession.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\nconst professionsSlice = createSlice({\n    name: \"professions\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        professionsRequested: (state) => {\n            state.isLoading = true;\n        },\n        professionsReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        professionsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: professionsReducer, actions } = professionsSlice;\nconst { professionsRequested, professionsReceved, professionsRequestFiled } =\n    actions;\n\nexport const loadProfessionsList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().professions;\n    if (isOutdated(lastFetch)) {\n        // console.log(\"lastFetch\", lastFetch);\n        dispatch(professionsRequested());\n        try {\n            const { content } = await professionService.get();\n            dispatch(professionsReceved(content));\n        } catch (error) {\n            dispatch(professionsRequestFiled(error.message));\n        }\n    }\n};\nexport const getProfessions = () => (state) => state.professions.entities;\nexport const getProfessionsLoadingStatus = () => (state) =>\n    state.professions.isLoading;\nexport const getProfessionbyId = (id) => (state) => {\n    if (state.professions.entities) {\n        return state.professions.entities.find((p) => {\n            // console.log(p._id, p.name, id);\n            return p._id === id;\n        });\n    }\n};\nexport default professionsReducer;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        data.content = data.content.map((item) => {\n            if (item.rate) item.rate = item.rate.toFixed(1);\n            return item;\n        });\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    update: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndpoint + localStorageService.getUserId(),\n            payload\n        );\n        return data;\n    }\n};\nexport default userService;\n","export function generetaAuthError(message) {\n    switch (message) {\n        case \"INVALID_PASSWORD\":\n            return \"Email или пароль введены некорректно\";\n        case \"EMAIL_EXISTS\":\n            return \"Пользователь с таким Email уже существует\";\n        default:\n            return \"Слишком много попыток входа. Попробуйте позднее\";\n    }\n}\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport authService from \"../services/auth.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\nimport userService from \"../services/user.service\";\r\nimport { generetaAuthError } from \"../utils/generateAuthError\";\r\n// import { toastErrorBounce } from \"../utils/animateTostify\";\r\nimport history from \"../utils/history\";\r\nconst initialState = localStorageService.getAccessToken()\r\n    ? {\r\n          entities: null,\r\n          isLoading: false,\r\n          error: null,\r\n          auth: { userId: localStorageService.getUserId() },\r\n          isLoggedIn: true,\r\n          dataLoaded: false\r\n      }\r\n    : {\r\n          entities: null,\r\n          isLoading: false,\r\n          error: null,\r\n          auth: null,\r\n          isLoggedIn: false,\r\n          dataLoaded: false\r\n      };\r\n\r\nconst usersSlice = createSlice({\r\n    name: \"users\",\r\n    initialState,\r\n    reducers: {\r\n        usersRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        usersReceved: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.dataLoaded = true;\r\n            state.isLoading = false;\r\n        },\r\n        usersRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        authRequestSuccess: (state, action) => {\r\n            state.auth = action.payload;\r\n            state.isLoggedIn = true;\r\n        },\r\n        authRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n        },\r\n        userCreated: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        },\r\n        userLoggedOut: (state) => {\r\n            state.entities = null;\r\n            state.isLoggedIn = false;\r\n            state.error = null;\r\n            state.auth = null;\r\n            state.dataLoaded = false;\r\n        },\r\n        userUpdateSuccessed: (state, action) => {\r\n            state.entities[\r\n                state.entities.findIndex((u) => u._id === action.payload._id)\r\n            ] = action.payload;\r\n        },\r\n        userUpdateData: (state, action) => {\r\n            const updateUser = state.entities.find(\r\n                (u) => u._id === action.payload._id\r\n            );\r\n            switch (action.payload.type) {\r\n                case \"rate\":\r\n                    if (action.payload.rateDirection === \"inc\") {\r\n                        updateUser.rate = Number(updateUser.rate) + 0.1;\r\n                        if (updateUser.rate > 5) updateUser.rate = 1;\r\n                    } else {\r\n                        updateUser.rate = Number(updateUser.rate) - 0.1;\r\n                        if (updateUser.rate < 1) updateUser.rate = 5.0;\r\n                    }\r\n                    updateUser.rate = Number(updateUser.rate)\r\n                        .toFixed(1)\r\n                        .toString();\r\n                    break;\r\n                case \"bookmark\":\r\n                    updateUser.bookmark = !updateUser.bookmark;\r\n                    break;\r\n            }\r\n            state.entities[\r\n                state.entities.findIndex((u) => u._id === action.payload._id)\r\n            ] = updateUser;\r\n        },\r\n\r\n        authRequested: (state) => {\r\n            state.error = null;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: usersReducer, actions } = usersSlice;\r\nconst {\r\n    usersRequested,\r\n    usersReceved,\r\n    usersRequestFailed,\r\n    authRequestFailed,\r\n    authRequestSuccess,\r\n    userUpdateData,\r\n    userLoggedOut,\r\n    userUpdateSuccessed\r\n} = actions;\r\n\r\nconst authRequested = createAction(\"users/authRequested\");\r\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\r\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\r\n\r\nexport const login =\r\n    ({ payload, redirect }) =>\r\n    async (dispatch) => {\r\n        const { email, password } = payload;\r\n        dispatch(authRequested());\r\n        try {\r\n            const data = await authService.login({ email, password });\r\n            localStorageService.setTokens(data);\r\n            dispatch(authRequestSuccess({ userId: data.userId }));\r\n            history.push(redirect);\r\n        } catch (error) {\r\n            const { code, message } = error.response.data;\r\n            if (code === 400) {\r\n                const errorMessage = generetaAuthError(message);\r\n                dispatch(authRequestFailed({ message: errorMessage }));\r\n            } else {\r\n                dispatch(authRequestFailed(error.message));\r\n            }\r\n        }\r\n    };\r\n\r\nexport const signUp = (payload) => async (dispatch) => {\r\n    dispatch(authRequested());\r\n    try {\r\n        const data = await authService.register(payload);\r\n        localStorageService.setTokens(data);\r\n        dispatch(authRequestSuccess({ userId: data.userId }));\r\n        history.push(\"/user\");\r\n    } catch (error) {\r\n        dispatch(authRequestFailed(error.message));\r\n    }\r\n};\r\nexport const logOut = () => (dispatch) => {\r\n    localStorageService.removeAuthData();\r\n    dispatch(userLoggedOut());\r\n    if (history.location.pathname !== \"/login\") history.push(\"/login\");\r\n};\r\n\r\nexport const loadUsersList = () => async (dispatch, state) => {\r\n    dispatch(usersRequested());\r\n    try {\r\n        const data = await userService.get();\r\n        dispatch(usersReceved(data.content));\r\n    } catch (error) {\r\n        if (error.response?.data) {\r\n            dispatch(usersRequestFailed(error.response.data));\r\n        } else dispatch(usersRequestFailed(error.message));\r\n    }\r\n};\r\nexport const updateUser = (payload) => async (dispatch) => {\r\n    dispatch(userUpdateRequested());\r\n    try {\r\n        const { content } = await userService.update(payload.user || payload);\r\n        dispatch(userUpdateSuccessed(content));\r\n\r\n        if (payload.redirect !== undefined ? !payload.redirect : false) return;\r\n        history.push(`/users/${content._id}`);\r\n    } catch (error) {\r\n        dispatch(userUpdateFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const updateUserData = (payload) => (dispatch, state) => {\r\n    dispatch(userUpdateData(payload));\r\n    dispatch(\r\n        updateUser({\r\n            user: {\r\n                ...state().users.entities.find(\r\n                    (user) => user._id === payload._id\r\n                )\r\n            },\r\n            redirect: false\r\n        })\r\n    );\r\n};\r\n\r\nexport const getUsersList = () => (state) => state.users.entities;\r\nexport const getCurrentUserData = () => (state) => {\r\n    return state.users.entities\r\n        ? state.users.entities.find((u) => u._id === state.users.auth.userId)\r\n        : null;\r\n};\r\nexport const getUserById = (userId) => (state) => {\r\n    if (state.users.entities) {\r\n        return state.users.entities.find((u) => u._id === userId);\r\n    }\r\n};\r\n\r\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\r\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\r\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\r\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\r\nexport const getErrors = () => (state) => state.users.error;\r\nexport const getAuthErrors = () => (state) =>\r\n    state.users.error?.message || state.users.error;\r\nexport default usersReducer;\r\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../../utils/ validator\";\r\nimport { transformBootColor } from \"../../../utils/transformColor\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport RadioField from \"../../common/form/radio.Field\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport BackHistoryButton from \"../../common/backButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    getQualities,\r\n    getQualitiesLoadingStatus\r\n} from \"../../../store/qualities\";\r\nimport {\r\n    getProfessions,\r\n    getProfessionsLoadingStatus\r\n} from \"../../../store/professions\";\r\nimport { getCurrentUserData, updateUser } from \"../../../store/users\";\r\n\r\nconst EditUserPage = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [data, setData] = useState();\r\n    const currentUser = useSelector(getCurrentUserData());\r\n    const dispatch = useDispatch();\r\n    const qualities = useSelector(getQualities());\r\n    const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\r\n    const qualitiesList = qualities.map((q) => ({\r\n        label: q.name,\r\n        value: q._id,\r\n        color: transformBootColor(q.color)\r\n    }));\r\n    const professions = useSelector(getProfessions());\r\n    const professionLoading = useSelector(getProfessionsLoadingStatus());\r\n    const professionsList = professions.map((p) => ({\r\n        label: p.name,\r\n        value: p._id\r\n      }));\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        dispatch(\r\n            updateUser({\r\n                ...data,\r\n                qualities: data.qualities.map((q) => q.value)\r\n            })\r\n        );\r\n    };\r\n    function getQualitiesListByIds(qualitiesIds) {\r\n        const qualitiesArray = [];\r\n        for (const qualId of qualitiesIds) {\r\n            for (const quality of qualities) {\r\n                if (quality._id === qualId) {\r\n                    qualitiesArray.push(quality);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    }\r\n    const transformData = (data) => {\r\n        const result = getQualitiesListByIds(data).map((qual) => ({\r\n            label: qual.name,\r\n            value: qual._id,\r\n            color: transformBootColor(qual.color)\r\n        }));\r\n\r\n        return result;\r\n    };\r\n    useEffect(() => {\r\n        if (!professionLoading && !qualitiesLoading && currentUser && !data) {\r\n            setData({\r\n                ...currentUser,\r\n                qualities: transformData(currentUser.qualities)\r\n            });\r\n        }\r\n    }, [professionLoading, qualitiesLoading, currentUser, data]);\r\n    useEffect(() => {\r\n        if (data && isLoading) {\r\n            setIsLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    const validatorConfog = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n\r\n        name: {\r\n            isRequired: {\r\n                message: \"Введите ваше имя\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => validate(), [data]);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfog);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <BackHistoryButton />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {!isLoading && Object.keys(professions).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выбери свою профессию\"\r\n                                defaultOption=\"Choose...\"\r\n                                name=\"profession\"\r\n                                options={professionsList}\r\n                                onChange={handleChange}\r\n                                value={data.profession}\r\n                                error={errors.profession}\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    { name: \"Male\", value: \"male\" },\r\n                                    { name: \"Female\", value: \"female\" },\r\n                                    { name: \"Other\", value: \"other\" }\r\n                                ]}\r\n                                value={data.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол\"\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.qualities}\r\n                                options={qualitiesList}\r\n                                onChange={handleChange}\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качесвта\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        \"Loading...\"\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUserPage;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getCurrentUserData,\n    getUserById,\n    updateUserData\n} from \"../../store/users\";\n\nconst UserCard = ({ user }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [rateDirection, setDirectionRate] = useState();\n    const { rate } = useSelector(getUserById(user._id));\n    const currentUser = useSelector(getCurrentUserData());\n\n    const updateCaretUpClass = useMemo(\n        () =>\n            rateDirection === \"inc\"\n                ? `bi bi-caret-up-fill text-${\n                      currentUser._id !== user._id ? \"primary\" : \"secondary\"\n                  }`\n                : \"bi bi-caret-up text-secondary\",\n        [rateDirection]\n    );\n\n    useEffect(() => setDirectionRate(\"dec\"), []);\n\n    const updateCaretDownClass = useMemo(() => {\n        return rateDirection === \"dec\"\n            ? `bi bi-caret-down-fill text-${\n                  currentUser._id !== user._id ? \"primary\" : \"secondary\"\n              }`\n            : \"bi bi-caret-down text-secondary\";\n    }, [rateDirection]);\n\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    const handleIncrementRate = () => {\n        if (currentUser._id !== user._id) {\n            setDirectionRate(\"inc\");\n            dispatch(\n                updateUserData({\n                    _id: user._id,\n                    type: \"rate\",\n                    rateDirection: \"inc\"\n                })\n            );\n        }\n    };\n\n    const handleDecrementRate = () => {\n        if (currentUser._id !== user._id) {\n            setDirectionRate(\"dec\");\n            dispatch(\n                updateUserData({\n                    _id: user._id,\n                    type: \"rate\",\n                    rateDirection: \"dec\"\n                })\n            );\n        }\n    };\n\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                {currentUser._id === user._id && (\n                    <button\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                        onClick={handleClick}\n                    >\n                        <i className=\"bi bi-gear\"></i>\n                    </button>\n                )}\n\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={user.image}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className={updateCaretDownClass}\n                                role=\"button\"\n                                onClick={handleDecrementRate}\n                            ></i>\n                            <i\n                                className={updateCaretUpClass}\n                                role=\"button\"\n                                onClick={handleIncrementRate}\n                            ></i>\n                            <span className=\"ms-2\">{rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ _id, color, name }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n    // return \"something\";\n};\nQuality.propTypes = {\n    _id: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    name: PropTypes.string\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport {\n    getQualitiesLoadingStatus,\n    getQulitiesByIds,\n    loadQualitiesList\n} from \"../../../store/qualities\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst QualitiesList = ({ qualities }) => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = useSelector(getQulitiesByIds(qualities));\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n    }, []);\n\n    if (isLoading) return \"Loadind ...\";\n\n    return (\n        <>\n            {qualitiesList.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\r\n    const date = new Date(data);\r\n    const dateNow = new Date();\r\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\r\n\r\n    if (yearDif === 0) {\r\n        const dayDif = dateNow.getDay() - date.getDay();\r\n        if (dayDif === 0) {\r\n            const hourDif = dateNow.getHours() - date.getHours();\r\n            if (hourDif === 0) {\r\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\r\n\r\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\r\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\r\n                if (minutesDif >= 10 && minutesDif < 30) {\r\n                    return \"10 минут назад\";\r\n                }\r\n                return \"30 минут назад\";\r\n            }\r\n            return `${date.getHours()}:${date.getMinutes()}`;\r\n        }\r\n\r\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\r\n            month: \"long\"\r\n        })}`;\r\n    }\r\n    return (\r\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\r\n    );\r\n}\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { getCurrentUserId, getUserById } from \"../../../store/users\";\nimport { useSelector } from \"react-redux\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const currentUserId = useSelector(getCurrentUserId());\n    const user = useSelector(getUserById(userId));\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"d-flex flex-start \">\n                        <img\n                            src={user?.image}\n                            className=\"rounded-circle shadow-1-strong me-3\"\n                            alt=\"avatar\"\n                            width=\"65\"\n                            height=\"65\"\n                        />\n                        <div className=\"flex-grow-1 flex-shrink-1\">\n                            <div className=\"mb-4\">\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <p className=\"mb-1 \">\n                                        {user?.name}{\" \"}\n                                        <span className=\"small\">\n                                            - {displayDate(created)}\n                                        </span>\n                                    </p>\n                                    {currentUserId === userId && (\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    )}\n                                </div>\n                                <p className=\"small mb-0\">{content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\n\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\n// import { useParams } from \"react-router\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/ validator\";\nimport PropTypes from \"prop-types\";\n// import { useSelector } from \"react-redux\";\n// import { getCurrentUserData } from \"../../../store/users\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({ content: \"\" });\n    const [errors, setErrors] = useState({});\n    // const currentUser = useSelector(getCurrentUserData());\n    // const { userId } = useParams();\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const clearForm = () => {\n        setData({ content: \"\" });\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.post(commentEndpoint,\n            payload\n        );\n        return data;\n    },\n    getComments: async (pageId) => {\n        const { data } = await httpService.get(commentEndpoint, {\n            params: {\n                orderBy: \"pageId\",\n                equalTo: `${pageId}`\n            }\n        });\n        return data;\n    },\n    removeComment: async (commentId) => {\n        const { data } = await httpService.delete(commentEndpoint + commentId);\n        return data;\n    }\n};\nexport default commentService;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport commentService from \"../services/comment.service\";\nconst commentsSlice = createSlice({\n    name: \"comments\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null\n    },\n    reducers: {\n        commentsRequested: (state) => {\n            state.isLoading = true;\n        },\n        commentsReceved: (state, action) => {\n            state.entities = action.payload;\n            state.isLoading = false;\n        },\n        commentsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        commetnCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        commentRemoved: (state, action) => {\n            state.entities = state.entities.filter(\n                (c) => c._id !== action.payload\n            );\n        }\n    }\n});\n\nconst { reducer: commentsReducer, actions } = commentsSlice;\nconst {\n    commentsRequested,\n    commentsReceved,\n    commentsRequestFiled,\n    commetnCreated,\n    commentRemoved\n} = actions;\n\nconst addCommentRequested = createAction(\"comments/addCommentRequested\");\nconst removeCommentRequested = createAction(\"comments/removeCommentRequested\");\n\nexport const loadCommentsList = (userId) => async (dispatch) => {\n    dispatch(commentsRequested());\n    try {\n        const { content } = await commentService.getComments(userId);\n        dispatch(commentsReceved(content));\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\nexport const createComment = (payload) => async (dispatch, getState) => {\n    dispatch(addCommentRequested());\n    try {\n        const { content } = await commentService.createComment(payload);\n        dispatch(commetnCreated(content));\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\nexport const removeComment = (commentId) => async (dispatch) => {\n    dispatch(removeCommentRequested());\n    try {\n        const { content } = await commentService.removeComment(commentId);\n        if (content.length === 0) {\n            dispatch(commentRemoved(commentId));\n        }\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\n\nexport const getComments = () => (state) => state.comments.entities;\nexport const getCommentsLoadingStatus = () => (state) =>\n    state.comments.isLoading;\n\nexport default commentsReducer;\n","import { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\n// import { nanoid } from \"nanoid\";\nimport {\n    createComment,\n    getComments,\n    getCommentsLoadingStatus,\n    loadCommentsList,\n    removeComment\n} from \"../../store/comments\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(loadCommentsList(userId));\n    }, [userId]);\n    const isLoading = useSelector(getCommentsLoadingStatus());\n    const comments = useSelector(getComments());\n\n    const handleSubmit = (data) => {\n        dispatch(createComment({ ...data, pageId: userId }));\n    };\n    const handleRemoveComment = (id) => {\n        dispatch(removeComment(id));\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        {!isLoading ? (\n                            <CommentsList\n                                comments={sortedComments}\n                                onRemove={handleRemoveComment}\n                            />\n                        ) : (\n                            \"loading...\"\n                        )}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\n\nimport { useSelector } from \"react-redux\";\nimport { getUserById } from \"../../../store/users\";\n\nconst UserPage = ({ userId }) => {\n    const user = useSelector(getUserById(userId));\n\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <Comments />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pagesCount + 1);\n\n    if (pagesCount === 1) return null;\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport {\n    getProfessionbyId,\n    getProfessionsLoadingStatus\n} from \"../../store/professions\";\n\nconst Profession = ({ id }) => {\n    const isLoading = useSelector(getProfessionsLoadingStatus());\n    const prof = useSelector(getProfessionbyId(id));\n    // console.log(prof, id, isLoading);\n    if (!isLoading) {\n        return <p>{prof.name}</p>;\n    } else return \"loading ...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport {\n    getProfessions,\n    getProfessionsLoadingStatus\n} from \"../../../store/professions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getCurrentUserId,\n    getUsersList,\n    updateUserData\n} from \"../../../store/users\";\nconst UsersListPage = () => {\n    const dispatch = useDispatch();\n\n    const users = useSelector(getUsersList());\n    const currentUserId = useSelector(getCurrentUserId());\n    const professions = useSelector(getProfessions());\n    const professionsLoading = useSelector(getProfessionsLoadingStatus());\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        console.log(\"delete user\");\n        // setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        dispatch(updateUserData({ _id: id, type: \"bookmark\" }));\n        // setUsers(newArray);\n        // console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    function filterUsers(data) {\n        const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter((user) => user.profession === selectedProf._id)\n            : data;\n        return filteredUsers.filter((u) => u._id !== currentUserId);\n    }\n    const filteredUsers = filterUsers(users);\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n\n    return (\n        <div className=\"d-flex\">\n            {professions && !professionsLoading && (\n                <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                    <GroupList\n                        selectedItem={selectedProf}\n                        items={professions}\n                        onItemSelect={handleProfessionSelect}\n                    />\n                    <button\n                        className=\"btn btn-secondary mt-2\"\n                        onClick={clearFilter}\n                    >\n                        Очиститть\n                    </button>\n                </div>\n            )}\n            <div className=\"d-flex flex-column\">\n                <SearchStatus length={count} />\n                <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    placeholder=\"Search...\"\n                    onChange={handleSearchQuery}\n                    value={searchQuery}\n                />\n                {count > 0 && (\n                    <UserTable\n                        users={usersCrop}\n                        onSort={handleSort}\n                        selectedSort={sortBy}\n                        onDelete={handleDelete}\n                        onToggleBookMark={handleToggleBookMark}\n                    />\n                )}\n                <div className=\"d-flex justify-content-center\">\n                    <Pagination\n                        itemsCount={count}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={handlePageChange}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataStatus, loadUsersList } from \"../../../store/users\";\n\nconst UsersLoader = ({ children }) => {\n    const dataStatus = useSelector(getDataStatus());\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!dataStatus) dispatch(loadUsersList());\n    }, []);\n    if (!dataStatus) return \"Loading\";\n    return children;\n};\n\nUsersLoader.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default UsersLoader;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UsersLoader from \"../components/ui/hoc/usersLoader\";\n\nimport { getCurrentUserId } from \"../store/users\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    const currentUserId = useSelector(getCurrentUserId());\n    return (\n        <>\n            <UsersLoader>\n                {userId ? (\n                    edit ? (\n                        userId === currentUserId ? (\n                            <EditUserPage />\n                        ) : (\n                            <Redirect to={`/users/${currentUserId}/edit`} />\n                        )\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UsersLoader>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label \" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const loginError = useSelector(getAuthErrors());\n    const history = useHistory();\n    const dispath = useDispatch();\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателкн для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const redirect = history.location.state\n            ? history.location.state.from.pathname\n            : \"/\";\n\n        dispath(login({ payload: data, redirect }));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {loginError && <p className=\"text-danger\">{loginError}</p>}\n\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n\n    const qualities = useSelector(getQualities());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должено состаять миниму из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязательна для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        dispatch(signUp(newData));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                name=\"profession\"\n                options={professionsList}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качесвта\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\nimport {\n    toastSuccessBounce,\n    toastErrorBounce\n} from \"../utils/animateTostify\";\n\nconst useMockData = () => {\n    const statusConsts = {\n        idle: \"Not Started\",\n        pending: \"In Process\",\n        successed: \"Ready\",\n        error: \"Error occured\"\n    };\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(statusConsts.idle);\n    const [progress, setProgress] = useState(0);\n    const [count, setCount] = useState(0);\n    const summuryCount = professions.length + qualities.length + users.length;\n    const incrementCount = () => {\n        setCount((prevState) => prevState + 1);\n    };\n    const updateProgress = () => {\n        if (count !== 0 && status === statusConsts.idle) {\n            setStatus(statusConsts.pending);\n        }\n        const newProgress = Math.floor((count / summuryCount) * 100);\n        if (progress < newProgress) {\n            setProgress(() => newProgress);\n        }\n        if (newProgress === 100) {\n            setStatus(statusConsts.successed);\n            toastSuccessBounce(\"Данные пользователей успешно залиты на БД\");\n        }\n    };\n\n    useEffect(() => {\n        updateProgress();\n    }, [count]);\n    async function initialize() {\n        try {\n            setError(null);\n            setStatus(statusConsts.idle);\n            setProgress(0);\n            setCount(0);\n\n            for (const prof of professions) {\n                await httpService.put(\"profession/\" + prof._id, prof);\n                incrementCount();\n            }\n            for (const user of users) {\n                await httpService.put(\"user/\" + user._id, user);\n                incrementCount();\n            }\n            for (const qual of qualities) {\n                await httpService.put(\"quality/\" + qual._id, qual);\n                incrementCount();\n            }\n        } catch (error) {\n            setError(error.message);\n            setStatus(statusConsts.error);\n            toastErrorBounce(`Произошла ошибка: ${error.message}`);\n        }\n    }\n\n    return { error, initialize, progress, status };\n};\n\nexport default useMockData;\n","import React from \"react\";\nimport useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1> Main Page</h1>\n            <h3>Инициализация данных в MongoDB</h3>\n            <ul>\n                <li>Status:{status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getCurrentUserData\n} from \"../../store/users\";\n\nconst NavProfile = () => {\n    const currentUser = useSelector(getCurrentUserData());\n    const [isOpen, setOpen] = useState(false);\n    const toggleMenu = () => {\n        setOpen((prevState) => !prevState);\n    };\n\n    if (!currentUser) return \"loading\";\n    return (\n        <div className=\"dropdown\" onClick={toggleMenu}>\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\n                <div className=\"me-2\">{currentUser.name}</div>\n                <img\n                    src={currentUser.image}\n                    alt=\"\"\n                    height=\"40\"\n                    className=\"img-responsive rounded-circle\"\n                />\n            </div>\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\n                <Link\n                    to={`/users/${currentUser._id}`}\n                    className=\"dropdown-item\"\n                >\n                    Profile\n                </Link>\n                <Link to=\"/logout\" className=\"dropdown-item\">\n                    Log Out\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NavProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getIsLoggedIn } from \"../../store/users\";\nimport NavProfile from \"./navProfile\";\nconst NavBar = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    return (\n        <nav className=\"navbar bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {isLoggedIn && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link \"\n                                aria-current=\"page\"\n                                to=\"/users\"\n                            >\n                                Users\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <div className=\"d-flex\">\n                    {isLoggedIn ? (\n                        <NavProfile />\n                    ) : (\n                        <Link\n                            className=\"nav-link \"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            Login\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!isLoggedIn) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n                return Component ? <Component {...props} /> : children;\n            }}\n        />\n    );\n};\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    location: PropTypes.object,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../store/users\";\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        console.log(\"logout\");\n        dispatch(logOut());\n    }, []);\n    return <h1>Loading</h1>;\n};\n\nexport default LogOut;\n","import { useEffect } from \"react\";\nimport { toastDarkBounce } from \"../../../utils/animateTostify\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getIsLoggedIn,\n    getErrors,\n    loadUsersList,\n    getUsersLoadingStatus,\n    logOut\n} from \"../../../store/users\";\nimport { loadQualitiesList } from \"../../../store/qualities\";\nimport { loadProfessionsList } from \"../../../store/professions\";\n\nconst AppLoader = ({ children }) => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    const usersStatusLoading = useSelector(getUsersLoadingStatus());\n    const authError = useSelector(getErrors());\n\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n        dispatch(loadProfessionsList());\n        if (isLoggedIn) {\n            dispatch(loadUsersList());\n        }\n        return () => {\n            // console.log(\"unmount\");\n        };\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if (authError && authError.type === \"expires\") {\n            toastDarkBounce(authError.message);\n            dispatch(logOut());\n            return \"need reauthorization\";\n        }\n    }, [authError]);\n\n    if (usersStatusLoading) return \"loading\";\n    return children;\n};\n\nAppLoader.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default AppLoader;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LogOut from \"./layouts/logOut\";\nimport AppLoader from \"./components/ui/hoc/appLoader\";\n\nfunction App() {\n    return (\n        <div>\n            <AppLoader>\n                <NavBar />\n                <Switch>\n                    <ProtectedRoute\n                        path=\"/users/:userId?/:edit?\"\n                        component={Users}\n                    />\n                    <Route path=\"/login/:type?\" component={Login} />\n                    <Route path=\"/logout\" component={LogOut} />\n                    <Route path=\"/\" exact component={Main} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </AppLoader>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import commentsReducer from \"./comments\";\nimport professionsReducer from \"./professions\";\nimport qualitiesReducer from \"./qualities\";\nimport usersReducer from \"./users\";\n\nconst { combineReducers, configureStore } = require(\"@reduxjs/toolkit\");\n\nconst rootReducer = combineReducers({\n    qualities: qualitiesReducer,\n    professions: professionsReducer,\n    users: usersReducer,\n    comments: commentsReducer\n});\n\nexport function createStore() {\n    return configureStore({\n        reducer: rootReducer\n    });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { Router } from \"react-router-dom\";\nimport { createStore } from \"./app/store/createStore\";\nimport { Provider } from \"react-redux\";\nimport history from \"./app/utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router history={history}>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}